<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter>
    <!-- Exclude all generated code -->
    <Match>
        <Package name="~com.acroteq.ticketing.kafka.[a-z\.]+.avro.model"/>
    </Match>
    <Match>
        <Package name="~com.acroteq.ticketing.[a-z\.]+.service.presentation.(api|model)"/>
    </Match>
    <Match>
        <Package name="~com.acroteq.ticketing.[a-z\.]+.service.client.(api|model|invoker)"/>
    </Match>
    <!-- <Match> -->
    <!--     <Package name="~com.acroteq.ticketing.[a-z\-]+.service.presentation.model"/> -->
    <!-- </Match> -->

    <!-- We don't do static code analysis on test classes -->
    <Match>
        <Or>
            <Class name="~.*Test"/>
            <Class name="~.*Spec"/>
            <Class name="~.*StepDefinitions"/>
        </Or>
    </Match>

    <Match>
        <Source name="~.*\.groovy"/>
    </Match>

    <!-- Spring IOC/injection does not do a deep copy of the injected instances, which means we can't meet this rule. -->
    <Match>
        <!-- TODO Replace Class filter with Annotation  -->
        <!-- The new Annotation matcher was only merged to Spotbugs master in April 2023. It should be available with the next release. -->
        <!-- Until then, we need to specify the Spring component and service classes by name. -->
        <!-- <Or> -->
        <!--     <Annotation name="javax.annotation.processing.Generated"/> -->
        <!--     <Annotation name="org.springframework.stereotype.Service"/> -->
        <!--     <Annotation name="org.springframework.context.annotation.Configuration"/> -->
        <!-- </Or> -->
        <Or>
            <Class name="~.*Mapper"/>
            <Class name="~.*Helper"/>
            <Class name="~.*Controller"/>
            <Class name="~.*Configuration"/>
            <Class name="~.*Resolver"/>
            <Class name="~.*ApplicationServiceImpl"/>
            <Class name="~.*KafkaProducerImpl"/>
            <Class name="~.*MessageListenerImpl"/>
            <Class name="~.*RepositoryImpl"/>
            <Class name="~.*CommandProcessor"/>
            <Class name="~.*KafkaMessagePublisher"/>
        </Or>
        <Method name="&lt;init&gt;"/>
        <!-- </And> -->
        <Bug pattern="EI_EXPOSE_REP2"/>
    </Match>

    <!-- Spring IOC/injection does not do a deep copy of the injected instances, which means we can't meet this rule. -->
    <Match>
        <!-- TODO Replace Class filter with Annotation  -->
        <!-- The new Annotation matcher was only merged to Spotbugs master in April 2023. It should be available with the next release. -->
        <!-- Until then, we need to specify the Spring component and service classes by name. -->
        <!-- <Or> -->
        <!--     <Annotation name="javax.annotation.processing.Generated"/> -->
        <!--     <Annotation name="org.springframework.stereotype.Service"/> -->
        <!-- </Or> -->
        <Or>
            <Class name="~.*JpaEntity"/>
            <Class name="~.*JpaEntityBuilder"/>
        </Or>

        <Or>
            <Bug pattern="EI_EXPOSE_REP"/>
            <Bug pattern="EI_EXPOSE_REP2"/>
        </Or>
    </Match>

    <!-- Mapstruct checks everything for null, even if it is not nullable, and it passes null in to a method, even if it is not nullable. -->
    <Match>
        <!-- TODO Replace Class filter with Annotation  -->
        <Class name="~.*MapperImpl"/>
        <!-- <Annotation name="javax.annotation.processing.Generated"/> -->
        <Or>
            <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
            <Bug pattern="NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS"/>
            <Bug pattern="NP_NULL_ON_SOME_PATH"/>
        </Or>
    </Match>

</FindBugsFilter>