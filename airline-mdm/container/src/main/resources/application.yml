server:
  port: 8183

airline-service:
  permit-cross-origin-from: http://localhost:8283
  airline-event:
    topic-name: airline-event

security:
  jwt:
    authority-prefix: SCOPE_
    principal-claim-name: "preferred_username"

spring:
  config:
    import: optional:file:.env[.properties]
  main:
    banner-mode: off
  jpa:
    open-in-view: false
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      default_schema: airline_master
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT}/${DATASOURCE_DATABASE}?currentSchema=airline_master&binaryTransfer=true&reWriteBatchedInserts=true&stringType=unspecified
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      platform: postgres
      mode: always
  liquibase:
    change-log: "classpath:db/changelog/changelog-master.yaml"
    default-schema: airline_master
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ticketing
            authorization-grant-type: authorization_code
            scope: openid
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            authorization-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/acroteq/protocol/openid-connect/auth
            jwk-set-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/acroteq/protocol/openid-connect/certs
            token-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/acroteq/protocol/openid-connect/token
            user-info-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/acroteq/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          jwk-set-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/acroteq/protocol/openid-connect/certs
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    security:
      protocol: "SSL"
    ssl:
      key-store-location: classpath:/certs/airline-mdm.keystore.jks
      key-store-password: acroteq
      trust-store-location: classpath:/certs/airline-mdm.truststore.jks
      trust-store-password: acroteq
    producer:
      acks: all
      batch-size: 16384
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      compression-type: snappy
      retries: 5
      properties:
        linger.ms: 5
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
        ssl.endpoint.identification.algorithm: ""
