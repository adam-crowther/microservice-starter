plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    alias pluginLibs.plugins.spotbugs
}

apply from: "${rootDir}/java.gradle"

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.unmappedTargetPolicy=ERROR',
            '-Amapstruct.verbose=false',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

dependencies {
    implementation project(":common:common-domain")
    implementation project(":common:common-application")
    implementation project(":common:common-presentation")
    implementation project(":airline-mdm:airline-mdm-domain:airline-mdm-application-service")
    implementation project(":airline-mdm:airline-mdm-domain:airline-mdm-domain-core")
    implementation project(":airline-mdm:airline-mdm-presentation:airline-mdm-api-spec")

    implementation libs.google.gson
    implementation libs.google.guava
    implementation libs.jackson.annotations
    implementation libs.jakarta.validation.api
    implementation libs.lombok.core
    implementation libs.mapstruct.core
    implementation libs.slf4j.api
    implementation libs.spotbugs.annotations
    implementation libs.spring.beans
    implementation libs.spring.boot.core
    implementation libs.spring.context
    implementation libs.spring.core
    implementation libs.spring.web
    implementation libs.spring.webmvc
    implementation libs.swagger.annotations

    annotationProcessor libs.lombok.core
    annotationProcessor libs.lombok.mapstruct.binding
    annotationProcessor libs.mapstruct.processor
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}