plugins {
    id 'java'
    alias pluginLibs.plugins.spring.boot
    alias pluginLibs.plugins.graphfity
}

compileJava {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
    options.compilerArgs += [
            '-Xlint:deprecation'
    ]
}

configurations {
    runtimeOnly.exclude group: 'ch.qos.logback'
    runtimeOnly.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":common:common-domain")
    implementation project(":customer-service:customer-presentation:customer-rest-controller")
    implementation project(":customer-service:customer-domain:customer-domain-core")
    implementation project(":customer-service:customer-domain:customer-application-service")
    implementation project(":customer-service:customer-infrastructure:customer-data-access")
    implementation project(":customer-service:customer-infrastructure:customer-messaging")

    implementation libs.lombok.core
    implementation libs.spotbugs.annotations
    implementation libs.spring.beans
    implementation libs.spring.context
    implementation libs.spring.data.commons
    implementation libs.spring.data.jpa
    implementation libs.spring.boot.core
    implementation libs.spring.boot.autoconfigure

    annotationProcessor libs.lombok.core

    runtimeOnly libs.slf4j.log4j12
    runtimeOnly libs.log4j.core
    runtimeOnly libs.log4j.slf4j
    runtimeOnly libs.postgresql.driver
    runtimeOnly libs.spring.boot.validation
    runtimeOnly libs.spring.boot.data.jpa
    runtimeOnly libs.spring.boot.web
}

springBoot {
    mainClass = 'com.acroteq.ticketing.customer.service.CustomerServiceApplication'
}

bootBuildImage {
    imageName = "${dockerNamespace}/${rootProject.name}/${project.name}:${project.version}"
}

graphfityExtension {
    nodeTypesPath = "${projectDir}/graphfityNodeTypes.json"
    projectRootName = "${project.path}"
    graphImagePath = "${buildDir}/"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}