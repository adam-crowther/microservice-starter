plugins {
    id 'java'
}

compileJava {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.unmappedTargetPolicy=ERROR',
            '-Amapstruct.verbose=false',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Xlint:deprecation'
    ]
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":common:common-domain")
    implementation project(":common:common-application")
    implementation project(":common:common-helper")
    implementation project(":airline-service:airline-domain:airline-domain-core")

    implementation libs.lombok.core
    implementation libs.google.guava
    implementation libs.spotbugs.annotations
    implementation libs.mapstruct.core
    implementation libs.slf4j.api
    implementation libs.spring.boot.core
    implementation libs.spring.beans
    implementation libs.jakarta.validation.api
    implementation libs.spring.boot.validation
    implementation libs.spring.context
    implementation libs.spring.tx

    runtimeOnly libs.slf4j.log4j12

    annotationProcessor libs.lombok.core
    annotationProcessor libs.lombok.mapstruct.binding
    annotationProcessor libs.mapstruct.processor

    testImplementation libs.spring.boot.autoconfigure
    testImplementation libs.spring.boot.test
    testImplementation libs.spring.test
    testImplementation libs.junit.jupiter.api
    testImplementation libs.mockito.core
    testImplementation libs.mockito.junit.jupiter
    testImplementation libs.hamcrest.core

    testRuntimeOnly libs.mockito.inline
    testRuntimeOnly libs.junit.jupiter.engine
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}