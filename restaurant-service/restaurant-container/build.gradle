plugins {
    id 'java'
    alias pluginLibs.plugins.spring.boot
    alias pluginLibs.plugins.graphfity
}

compileJava {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
    options.compilerArgs += [
            '-Xlint:deprecation'
    ]
}

configurations {
    runtimeOnly.exclude group: 'ch.qos.logback'
    runtimeOnly.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":common:common-domain")
    implementation project(":restaurant-service:restaurant-domain:restaurant-domain-core")
    implementation project(":restaurant-service:restaurant-domain:restaurant-application-service")
    implementation project(":restaurant-service:restaurant-infrastructure:restaurant-data-access")
    implementation project(":restaurant-service:restaurant-infrastructure:restaurant-messaging")

    implementation libs.spring.beans
    implementation libs.spring.context
    implementation libs.spring.data.commons
    implementation libs.spring.data.jpa
    implementation libs.spring.boot.core
    implementation libs.spring.boot.autoconfigure

    runtimeOnly libs.slf4j.log4j12
    runtimeOnly libs.log4j.core
    runtimeOnly libs.log4j.slf4j
    runtimeOnly libs.postgresql.driver
    runtimeOnly libs.spring.boot.validation
    runtimeOnly libs.spring.boot.data.jpa
    runtimeOnly libs.spring.boot.web
}

springBoot {
    mainClass = 'com.acroteq.food.ordering.system.restaurant.service.domain.RestaurantServiceApplication'
}

bootBuildImage {
    imageName = "${dockerNamespace}/${rootProject.name}/${project.name}:${project.version}"
}

graphfityExtension {
    nodeTypesPath = "${projectDir}/graphfityNodeTypes.json"
    projectRootName = "${project.path}"
    graphImagePath = "${buildDir}/"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}