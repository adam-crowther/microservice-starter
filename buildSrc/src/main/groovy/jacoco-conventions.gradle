plugins {
  id 'jacoco'
}

jacoco {
  toolVersion = "0.8.10"
}

jacocoTestReport {
  reports {
    xml.required = false
    csv.required = false
    html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
  }
}

test {
  jacoco {
    enabled = true
    destinationFile = layout.buildDirectory.file("jacoco/${name}.exec").get().asFile
    includes = []
    excludeClassLoaders = []
    includeNoLocationClasses = false
    dumpOnExit = true
    classDumpDir = null
    output = JacocoTaskExtension.Output.FILE
    // address = "localhost"
    // port = 6300
    jmx = false
  }
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.95
      }
    }

    rule {
      enabled = true
      element = 'CLASS'
      includes = ['ch.acroteq.ticketing.*']

      limit {
        counter = 'LINE'
        value = 'TOTALCOUNT'
        minimum = 0.95
      }
    }
  }

  afterEvaluate {
    getClassDirectories().setFrom(classDirectories.files.collect {
      fileTree(dir: it, exclude: ['**/config/*Configuration.class', '**/properties/*Config.class'])
    })
  }
}

jacocoTestReport {
  afterEvaluate {
    getClassDirectories().setFrom(classDirectories.files.collect {
      fileTree(dir: it, exclude: ['**/config/*Configuration.class', '**/properties/*Config.class'])
    })
  }
}

test.finalizedBy(jacocoTestReport, jacocoTestCoverageVerification)
