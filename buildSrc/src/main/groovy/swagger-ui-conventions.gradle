plugins {
  id 'org.hidetake.swagger.generator'
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-autoconfigure'
  implementation 'org.springframework.boot:spring-boot'
  implementation 'org.springframework:spring-context'
  implementation 'org.springframework:spring-core'
  implementation 'org.springframework:spring-webmvc'
  implementation 'com.google.guava:guava'

  runtimeOnly 'org.springframework.boot:spring-boot-starter-web'

  swaggerUI 'org.webjars:swagger-ui:4.1.3'
}

springBoot {
  mainClass = springApplicationClass
}

bootBuildImage {
  imageName = "${dockerNamespace}/${rootProject.name}/${project.name}:${project.version}"
}

swaggerSources {
  ticketing {
    inputFile = file("${buildDir}/openapi/openapi.yaml")
    ui {
      outputDir = file("$buildDir/swagger-html/resources")
    }
  }
}

tasks.register('copySpec', Copy) {
  def specProject = project(openApiSpecSubmodule)

  from specProject.layout.files('/src/main/spec/openapi.yaml')
  into "${buildDir}/openapi"

  doLast {
    def specFile = new File("${buildDir}/openapi/openapi.yaml")
    specFile.append("\nservers:" +
          "\n  - url: //${swaggerRestServerUrl}" +
          "\n    description: ${swaggerRestServerDescription}\n")
  }
}

sourceSets {
  main {
    resources {
      srcDirs "${buildDir}/openapi", "$buildDir/swagger-html"
    }
  }
}

generateSwaggerUITicketing {
  dependsOn tasks.named('copySpec')
}

processResources {
  dependsOn generateSwaggerUI
}