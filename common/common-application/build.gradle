plugins {
    id 'java'
}

compileJava {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.unmappedTargetPolicy=ERROR',
            '-Amapstruct.verbose=false',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Xlint:deprecation'
    ]
}

dependencies {
    implementation project(":common:common-domain")
    implementation project(":common:common-helper")

    implementation libs.lombok.core
    implementation libs.mapstruct.core
    implementation libs.slf4j.api

    implementation libs.spring.context
    implementation libs.spring.beans
    implementation libs.spring.web
    implementation libs.jakarta.annotation.api
    implementation libs.jakarta.validation.api

    annotationProcessor libs.lombok.core
    annotationProcessor libs.lombok.mapstruct.binding
    annotationProcessor libs.mapstruct.processor
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}