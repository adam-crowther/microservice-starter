plugins {
  id 'java'
  id 'checkstyle'
  id 'jacoco'
  alias pluginLibs.plugins.spotbugs
  id 'groovy'
}

apply from: "${rootDir}/java.gradle"
apply plugin: "groovy"

compileJava {
  options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.defaultInjectionStrategy=constructor',
        '-Amapstruct.unmappedTargetPolicy=ERROR',
        '-Amapstruct.verbose=false',
        '-Amapstruct.suppressGeneratorVersionInfoComment=true',
        '-Amapstruct.suppressGeneratorTimestamp=true'
  ]
}

dependencies {
  implementation project(":common:common-application")
  implementation project(":common:common-domain")
  implementation project(":common:common-helper")

  implementation libs.google.guava
  implementation libs.jakarta.annotation.api
  implementation libs.jakarta.validation.api
  implementation libs.lombok.core
  implementation libs.mapstruct.core
  implementation libs.slf4j.api
  implementation libs.spotbugs.annotations
  implementation libs.spring.context
  implementation libs.spring.core
  implementation libs.spring.web
  implementation libs.spring.webmvc

  annotationProcessor libs.lombok.core
  annotationProcessor libs.lombok.mapstruct.binding
  annotationProcessor libs.mapstruct.processor

  testImplementation libs.groovy
  testImplementation libs.jakarta.inject.api
  testImplementation libs.spock.core
  testImplementation libs.spock.spring
  testImplementation libs.spring.test
  testImplementation libs.equalsverifier
  testImplementation libs.mockito.core
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}