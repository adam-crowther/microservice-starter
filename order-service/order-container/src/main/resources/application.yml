server:
  port: 8181

order-service:
  swagger-port: 8281
  payment:
    consumer-group-id: payment-consumer-group
    request-topic-name: payment-request
    response-topic-name: payment-response
  airline-approval:
    consumer-group-id: airline-approval-consumer-group
    request-topic-name: airline-approval-request
    response-topic-name: airline-approval-response
  airline-event:
    consumer-group-id: airline-event-consumer-group
    topic-name: airline-event
  customer-event:
    consumer-group-id: customer-event-consumer-group
    topic-name: customer-event

#management.endpoints.web.exposure.include: *
management.endpoint.shutdown.enabled: true
#endpoints.shutdown.enabled: true

spring:
  main:
    banner-mode: off
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      default_schema: orders
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=orders&binaryTransfer=true&reWriteBatchedInserts=true&stringType=unspecified
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      platform: postgres
      mode: always
  liquibase:
    change-log: "classpath:db/changelog/changelog-master.yaml"
    default-schema: orders

kafka:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3
  producer:
    acks: all
    batch-size: 16384
    batch-size-boost-factor: 100
    linger-ms: 5
    request-timeout-ms: 60000
    retry-count: 5
    serialisation:
      key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
      value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
      compression-type: snappy
  consumer:
    auto-offset-reset: earliest
    batch-listener: true
    auto-startup: true
    concurrency-level: 3
    deserialisation:
      key-deserializer-class: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer-class: io.confluent.kafka.serializers.KafkaAvroDeserializer
      specific-avro-reader: true
    group-management:
      session-timeout-ms: 10000
      heartbeat-interval-ms: 3000
    polling:
      max-poll-interval-ms: 300000
      max-poll-records: 500
      max-partition-fetch-bytes-default: 1048576
      max-partition-fetch-bytes-boost-factor: 1
      poll-timeout-ms: 150
    dead-letter:
      suffix: -dlt
    backoff:
      max-retries: 3
      initial-interval-in-seconds: 10
      multiplier: 2
      max-interval-in-seconds: 40
