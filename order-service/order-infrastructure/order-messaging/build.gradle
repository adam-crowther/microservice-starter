plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    alias pluginLibs.plugins.spotbugs
}

apply from: "${rootDir}/java.gradle"

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.unmappedTargetPolicy=ERROR',
            '-Amapstruct.verbose=false',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

dependencies {
    implementation project(":common:common-application")
    implementation project(":common:common-domain")
    implementation project(":common:common-helper")
    implementation project(":common:common-infrastructure")
    implementation project(":common:common-kafka:kafka-libs")
    implementation project(":common:common-kafka:kafka-model")
    implementation project(":order-service:order-domain:order-application-service")
    implementation project(":order-service:order-domain:order-domain-core")

    implementation libs.apache.avro
    implementation libs.google.guava
    implementation libs.kafka.clients
    implementation libs.lombok.core
    implementation libs.mapstruct.core
    implementation libs.slf4j.api
    implementation libs.spotbugs.annotations
    implementation libs.spring.beans
    implementation libs.spring.boot.core
    implementation libs.spring.context
    implementation libs.spring.kafka
    implementation libs.spring.messaging

    annotationProcessor libs.lombok.core
    annotationProcessor libs.lombok.mapstruct.binding
    annotationProcessor libs.mapstruct.processor
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}