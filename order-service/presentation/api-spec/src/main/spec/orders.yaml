paths:
  /orders:
    get:
      summary: List all orders
      operationId: listOrders
      tags:
        - orders
      parameters:
        - $ref: "parameters.yaml#/components/parameters/limitQueryParam"
      responses:
        '200':
          description: An  array of orders
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "problem.yaml#/components/schemas/Problem"
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - orders
      requestBody:
        description: The order to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrder"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrderResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "problem.yaml#/components/schemas/Problem"

  /orders/{trackingId}:
    get:
      summary: Info for a specific order
      operationId: getOrderByTrackingId
      tags:
        - orders
      parameters:
        - $ref: "parameters.yaml#/components/parameters/trackingIdPathParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "problem.yaml#/components/schemas/Problem"
components:
  schemas:
    CreateOrder:
      type: object
      required:
        - customerId
        - airlineId
        - items
        - address
      properties:
        customerId:
          type: integer
          format: int64
        airlineId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/CreateOrderItem"
        address:
          $ref: "#/components/schemas/CreateAddress"

    CreateOrderResponse:
      type: object
      required:
        - id
        - trackingId
        - audit
        - status
      properties:
        id:
          type: integer
          format: int64
        trackingId:
          type: string
          format: uuid
        audit:
          $ref: "audit.yaml#/components/schemas/Audit"
        status:
          $ref: "#/components/schemas/OrderStatus"

    Order:
      type: object
      required:
        - id
        - trackingId
        - audit
        - status
        - customerId
        - airlineId
        - items
        - address
      properties:
        trackingId:
          type: string
          format: uuid
          readOnly: true
        audit:
          $ref: "audit.yaml#/components/schemas/Audit"
        status:
          $ref: "#/components/schemas/OrderStatus"
        id:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
          readOnly: true
        airlineId:
          type: integer
          format: int64
          readOnly: true
        items:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/OrderItem"
        address:
          $ref: "#/components/schemas/Address"

    OrderStatus:
      type: string
      enum: [ PENDING, PAID, APPROVED, CANCELLING, CANCELLED ]
      readOnly: true

    OrderItem:
      type: object
      required:
        - flightId
        - quantity
      properties:
        flightId:
          type: integer
          format: int64
          readOnly: true
        quantity:
          type: integer
          format: int32
          minimum: 1
          readOnly: true

    Address:
      type: object
      required:
        - street
        - postalCode
        - city
      properties:
        street:
          type: string
          maxLength: 50
          readOnly: true
        postalCode:
          type: string
          maxLength: 10
          readOnly: true
        city:
          type: string
          maxLength: 50
          readOnly: true

    Orders:
      type: array
      maxItems: 100
      readOnly: true
      items:
        $ref: "#/components/schemas/Order"

    CreateOrderItem:
      type: object
      required:
        - flightId
        - quantity
      properties:
        flightId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
          minimum: 1

    CreateAddress:
      type: object
      required:
        - street
        - postalCode
        - city
      properties:
        street:
          type: string
          maxLength: 50
        postalCode:
          type: string
          maxLength: 10
        city:
          type: string
          maxLength: 50
